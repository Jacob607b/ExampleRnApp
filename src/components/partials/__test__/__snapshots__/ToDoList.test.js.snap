// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ToDoList Tests Renders and fetches tasks 1`] = `
<View
  animatedStyle={
    Object {
      "value": Object {},
    }
  }
  collapsable={false}
  exiting={[Function]}
  style={
    Object {
      "color": "#4D626C",
    }
  }
  testID="toDoList"
>
  <Modal
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    presentationStyle="overFullScreen"
    transparent={true}
    visible={true}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 0, 0, 0.5)",
          "flex": 1,
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#f2f2f2",
            "flexDirection": "column",
            "height": "60%",
            "justifyContent": "center",
            "padding": 20,
            "textAlign": "center",
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#008dc9",
              "height": "10%",
              "justifyContent": "center",
              "marginBottom": 5,
              "marginTop": 5,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontSize": 15,
                "fontWeight": "bold",
              }
            }
          >
            Please Select A Task
          </Text>
        </View>
        <RCTScrollView
          CellRendererComponent={[Function]}
          animatedStyle={
            Object {
              "value": Object {},
            }
          }
          collapsable={false}
          data={
            Array [
              Object {
                "Description": "Read Needed",
                "Type": "ELE",
                "Unit": "G",
                "completed": false,
              },
            ]
          }
          entering={
            FadeInDown {
              "build": [Function],
              "callbackV": undefined,
              "dampingRatioV": undefined,
              "dampingV": undefined,
              "delayV": undefined,
              "durationV": undefined,
              "easingV": undefined,
              "initialValues": undefined,
              "massV": 1,
              "overshootClampingV": undefined,
              "randomizeDelay": false,
              "reduceMotionV": "system",
              "restDisplacementThresholdV": undefined,
              "restSpeedThresholdV": undefined,
              "rotateV": undefined,
              "stiffnessV": undefined,
              "type": [Function],
            }
          }
          getItem={[Function]}
          getItemCount={[Function]}
          keyExtractor={[Function]}
          onContentSizeChange={[Function]}
          onLayout={[Function]}
          onMomentumScrollBegin={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={1}
          stickyHeaderIndices={Array []}
          style={
            Object {
              "flex": 1,
            }
          }
          viewabilityConfigCallbackPairs={Array []}
        >
          <View>
            <View
              animatedStyle={
                Object {
                  "value": Object {},
                }
              }
              collapsable={false}
              onLayout={[Function]}
              style={Object {}}
            >
              <RCTScrollView>
                <View>
                  <View
                    accessibilityState={
                      Object {
                        "busy": undefined,
                        "checked": undefined,
                        "disabled": undefined,
                        "expanded": undefined,
                        "selected": undefined,
                      }
                    }
                    accessibilityValue={
                      Object {
                        "max": undefined,
                        "min": undefined,
                        "now": undefined,
                        "text": undefined,
                      }
                    }
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                    testID="selectTask"
                  >
                    <View
                      style={
                        Object {
                          "alignItems": "center",
                          "backgroundColor": "#3ba1c5",
                          "borderColor": "grey",
                          "borderRadius": 20,
                          "borderWidth": 1,
                          "justifyContent": "center",
                          "marginBottom": 10,
                          "marginRight": 200,
                          "paddingBottom": 50,
                          "width": "100%",
                        }
                      }
                    >
                      <Text
                        style={
                          Object {
                            "color": "#fbfdf6",
                            "fontSize": 20,
                            "fontWeight": "bold",
                            "marginTop": 10,
                          }
                        }
                      >
                        Unit: 
                        G
                      </Text>
                      <Text
                        style={
                          Object {
                            "color": "#fbfdf6",
                            "fontSize": 20,
                            "fontWeight": "bold",
                            "marginTop": 10,
                          }
                        }
                      >
                        Task: 
                        ELE
                         
                        Read Needed
                      </Text>
                    </View>
                  </View>
                </View>
              </RCTScrollView>
            </View>
          </View>
        </RCTScrollView>
        <View
          accessibilityState={
            Object {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            Object {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "marginBottom": 5,
              "marginTop": 10,
              "opacity": 1,
            }
          }
          testID="Dismiss"
        >
          <View
            collapsable={false}
            style={
              Object {
                "backgroundColor": "rgb(247, 243, 249)",
                "borderRadius": 20,
                "shadowColor": "#000",
                "shadowOffset": Object {
                  "height": 1,
                  "width": 0,
                },
                "shadowOpacity": 0.15,
                "shadowRadius": 3,
              }
            }
            testID="button-container-outer-layer"
          >
            <View
              collapsable={false}
              style={
                Object {
                  "backgroundColor": "rgb(247, 243, 249)",
                  "borderColor": "transparent",
                  "borderRadius": 20,
                  "borderStyle": "solid",
                  "borderWidth": 0,
                  "flex": undefined,
                  "minWidth": "auto",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": 0,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 1,
                }
              }
              testID="button-container"
            >
              <View
                accessibilityRole="button"
                accessibilityState={
                  Object {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": true,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  Object {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Array [
                    Object {
                      "overflow": "hidden",
                    },
                    Object {
                      "borderRadius": 20,
                    },
                  ]
                }
                testID="button"
              >
                <View
                  style={
                    Array [
                      Object {
                        "alignItems": "center",
                        "flexDirection": "row",
                        "justifyContent": "center",
                      },
                      undefined,
                    ]
                  }
                >
                  <Text
                    numberOfLines={1}
                    selectable={false}
                    style={
                      Array [
                        Object {
                          "textAlign": "left",
                        },
                        Object {
                          "color": "rgba(28, 27, 31, 1)",
                          "writingDirection": "ltr",
                        },
                        Array [
                          Object {
                            "fontFamily": "System",
                            "fontSize": 14,
                            "fontWeight": "500",
                            "letterSpacing": 0.1,
                            "lineHeight": 20,
                          },
                          Array [
                            Object {
                              "marginHorizontal": 16,
                              "marginVertical": 9,
                              "textAlign": "center",
                            },
                            false,
                            Object {
                              "marginHorizontal": 24,
                              "marginVertical": 10,
                            },
                            Object {
                              "marginHorizontal": 8,
                            },
                            false,
                            Object {
                              "color": "rgba(103, 80, 164, 1)",
                              "fontFamily": "System",
                              "fontSize": 14,
                              "fontWeight": "500",
                              "letterSpacing": 0.1,
                              "lineHeight": 20,
                            },
                            undefined,
                          ],
                        ],
                      ]
                    }
                    testID="button-text"
                  >
                    Close
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </Modal>
</View>
`;
